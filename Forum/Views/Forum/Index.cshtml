@model Forum.Models.ViewModels.MainTopicViewModel
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> signInManager;
@using System.Text.RegularExpressions

@{
    ViewData["Title"] = "Forum";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<partial name="~/Views/Shared/PartialView/Header.cshtml" />

<div class="forum">
    <div class="wrapper wrapper wrapper-1600">
        @if (User.Identity.IsAuthenticated)
        {
            <nav class="tab-like">
                <ul>
                    <li class="forum-add">
                        <a href="#newMainTopic"
                           rel="modal:open"
                           class="btn btn-outline open-modal">+ Add New Main Topic</a>
                    </li>
                    <li><a href="">Latest articles</a></li>
                </ul>
            </nav>
        }
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                @*@if (User.Identity.IsAuthenticated)
                {
    <li class="breadcrumb-item"><a href="/Admin/AdminDashboard">Home</a></li> }*@
             
                 <li class="breadcrumb-item"><a href="/Forum">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Information</li>
            </ol>
        </nav>
        <div class="box round-corner type-forum">
            <div class="row">
                <section class="col-lg-12">
                    <div class="d-flex flex-direction-row align-items-center justify-content-end">
                        @{
                            var filterDatas = new[] { "All", "test for edit", "Analysis only", "Feedbacks Only",
                                "Errors Only", "Compensators Only", "Information under analysis only",
                                "Images Only", "Videos Only" };
                        }
                        @(Html.DevExtreme().SelectBox()
        .DataSource(filterDatas)
        .Value(TreeListFilterMode.MatchOnly)
        .OnValueChanged(@<text>
            function(data) {
                var treeList = $("#tree-list").dxTreeList("instance");
                if (data.value   == "All")
                    treeList.clearFilter();
                else
                    treeList.filter(["Topic", "=", data.value]);

            }
        </text>)
    )


                        <div class=""></div>

                    </div>
                    <table class="forum-list-container stretch">
                       
                        <tbody>
                           
                            @(Html.DevExtreme().TreeList<Forum.Models.ViewModels.MainTopicViewModel>().ID("tree-list").DataSource(ds => ds.WebApi().Controller("Admin").LoadAction("GetMainTopics")
                                    .Key("MainTopicId")
                                    )
                                .RemoteOperations(r => r.Filtering(true).Sorting(true).Grouping(false)).KeyExpr("MainTopicId").ParentIdExpr("ParentIdFK").HasItemsExpr("HasItems")
                                    .ExpandedRowKeys(new[] { 1, 2 }).SearchPanel(seachPanel => seachPanel.Visible(false)).HeaderFilter(headerFilter => headerFilter.Visible(true))
                                    .ShowRowLines(true).ShowBorders(true).ColumnAutoWidth(true).WordWrapEnabled(true)
                                    .Columns(columns =>
                                    {
                                    columns.AddFor(x=>x.Topic).CellTemplate(@<text><a href="@Url.Action("SubTopic", "Forum")/<%= data.MainTopicId %>"><%= data.Topic%></a></text>);
                                        columns.AddFor(x => x.Description)
                                        //.CellTemplate(new JS("getShortDescription(@('<%=data%>'))"));
                                        .CustomizeText("getShortDescription").MinWidth(600);
                                        columns.AddFor(x => x.DisplayOrder)
                                                .CellTemplate("<div class='channel-display-orders'>" +
                                                                      "<input class='form-control-sm' value='<%= data.DisplayOrder%>' type='text'  /></div>")
                                                .HeaderCellTemplate("<div class='header-posts'><span>Display order</span></div>");
                                        columns.AddFor(x => x.Moderator)
                                                   .CellTemplate("<div class='d-flex align-items-center'><select class='form-control-sm'>" +
                                                                        "<option>User 1</option>" +
                                                                        "<option>User 2</option></select></div>"
                                                                );
                                    })
                            .FilterMode(TreeListFilterMode.MatchOnly)
                                    .OnInitNewRow("treeList_onInitNewRow"))
                        </tbody>
                    </table>
                </section>
            </div>
        </div>
    </div>
</div>


<div id="newMainTopic" class="modal">
    <header class="modal-header">Add Main Topic</header>
    <input type="hidden" id="hdMainTopicId" />
    <main class="modal-main">
        <form method="post" asp-controller="Forum" asp-action="AddMainTopic" enctype="multipart/form-data">
            <div class="form-wrapper">



                <input type="text" class="form-control" id="MainTopicId" asp-for="MainTopicId" name="MainTopicId" hidden />



                <div class="row align-items-center">
                    <label class="col-lg-3 form-title"> Topic </label>
                    <div class="col-lg-9">
                        <input type="text" class="form-control" id="Topic" asp-for="Topic" name="Topic" required />
                        <span class="validation_error" asp-validation-for="Topic"></span>
                    </div>
                </div>

                <div class="row align-items-center">
                    <label class="col-lg-3 form-title"> Description </label>
                    <div class="col-lg-9">
                        @(Html.DevExtreme().HtmlEditorFor(m => m.Description)
                            .ID("html-editor")
                                         .Height(200)
                                     .Toolbar(toolbar => toolbar.Items(
                                      items =>
                                      {
                                          items.Add().Name(HtmlEditorToolbarItem.Undo);

                                          items.Add().Name(HtmlEditorToolbarItem.Redo);

                                          items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          items.Add()
                                              .Name("size")
                                              .AcceptedValues(new[] { "8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt" });

                                          items.Add()
                                              .Name("font")
                                              .AcceptedValues(new[] { "Arial", "Courier New", "Georgia", "Impact", "Lucida Console", "Tahoma", "Times New Roman", "Verdana" });

                                          items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          items.Add().Name(HtmlEditorToolbarItem.Bold);

                                          items.Add().Name(HtmlEditorToolbarItem.Italic);

                                          items.Add().Name(HtmlEditorToolbarItem.Strike);

                                          items.Add().Name(HtmlEditorToolbarItem.Underline);

                                          items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          items.Add().Name(HtmlEditorToolbarItem.AlignLeft);

                                          items.Add().Name(HtmlEditorToolbarItem.AlignCenter);

                                          items.Add().Name(HtmlEditorToolbarItem.AlignRight);

                                          //items.Add().Name(HtmlEditorToolbarItem.AlignJustify);

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add().Name(HtmlEditorToolbarItem.OrderedList);

                                          //items.Add().Name(HtmlEditorToolbarItem.BulletList);

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add()
                                          //    .Name("header")
                                          //    .AcceptedValues(new JS("[false, 1, 2, 3, 4, 5]"));

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add().Name(HtmlEditorToolbarItem.Color);

                                          //items.Add().Name(HtmlEditorToolbarItem.Background);

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add().Name(HtmlEditorToolbarItem.Link);

                                          //items.Add().Name(HtmlEditorToolbarItem.Image);

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add().Name(HtmlEditorToolbarItem.Clear);

                                          //items.Add().Name(HtmlEditorToolbarItem.CodeBlock);

                                          //items.Add().Name(HtmlEditorToolbarItem.Blockquote);

                                          //items.Add().Name(HtmlEditorToolbarItem.Separator);

                                          //items.Add().Name(HtmlEditorToolbarItem.InsertTable);

                                          //items.Add().Name(HtmlEditorToolbarItem.DeleteTable);

                                          //items.Add().Name(HtmlEditorToolbarItem.InsertRowAbove);

                                          //items.Add().Name(HtmlEditorToolbarItem.InsertRowBelow);

                                          //items.Add().Name(HtmlEditorToolbarItem.DeleteRow);

                                          //items.Add().Name(HtmlEditorToolbarItem.InsertColumnLeft);

                                          //items.Add().Name(HtmlEditorToolbarItem.InsertColumnRight);

                                          //items.Add().Name(HtmlEditorToolbarItem.DeleteColumn);
                                      }))

                                      .Placeholder("Write your decription..."))


                        <span class="validation_error" asp-validation-for="Description"></span>
                    </div>
                </div>

                <div class="row align-items-center">
                    <label class="col-lg-3 form-title">
                        Topic icon
                        <span>
                            Icon changes will not be reflected on the forum until you
                            save this Main Topic
                        </span>
                    </label>
                    <div class="col-lg-9">
                        <input type="file" class="form-control" asp-for="Graphics" id="Graphics" name="Graphics" />
                        <span class="validation_error" asp-validation-for="Graphics"></span>
                    </div>
                </div>

                <div class="row align-items-center">
                    <label class="col-lg-3 form-title">
                        Display order
                        <span>Set to '0' to not display this item.</span>
                    </label>
                    <div class="col-lg-9">
                        <input type="number" class="form-control" asp-for="DisplayOrder" name="DisplayOrder" id="DisplayOrder" required />
                        <span class="validation_error" asp-validation-for="DisplayOrder"></span>
                    </div>
                </div>

                <div class="row align-items-center">
                    <label class="col-lg-3 form-title"> Parent Topic </label>
                    <div class="col-lg-9">
                        <select id="ParentIdFK" asp-items="@ViewBag.ParentTopic" asp-for="ParentIdFK" name="ParentIdFK">
                            <option value="0"> --Main Topic --</option>
                        </select>
                        <span class="validation_error" asp-validation-for="ParentIdFK"></span>
                    </div>
                </div>

                <div class="row align-items-center">
                    <label class="col-lg-3 form-title"></label>
                    <div class="col-lg-9">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>




        </form>
    </main>
    <footer class="modal-footer"></footer>
</div>

<script>
    function serializeData() {
        return $('#TestForm :input[name!=DXCss][name!=DXScript]').serialize();
    }
    function treeList_onInitNewRow(e) {
        e.data.Task_Status = "Not Started";
        e.data.Task_Start_Date = new Date();
        e.data.Task_Due_Date = new Date();
    }
    function edit_delete_control_event() {
        $("#newChannel").modal('show');
    }

    var selectBoxes = []
    function onClick(row) {
        console.log($(`#selectBox${row.key}`).dxSelectBox("instance").option("value"));
        console.log(row.key);
        var mainTopicId = (row.key);
        $.ajax({
            type: "GET",
            url: "/Admin/GetMainTopicById/" + mainTopicId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                mainTopicInfo(result);
            },
            error: function (xhr) {
                console.log(xhr.responseText);
            }
        });
        return false;
    }

    var id = function (row) {
        return "selectBox" + row.key;
    }

    var mainTopicInfo = function (result) {
        $("#newChannel").modal('show');
        result = JSON.parse(result);
        console.log(result);
        //$("#hdMainTopicId").val(result.Main)
        /*$('#newChannel #MainTopicId').val(result.MainTopicId);*/
        $("#newChannel #MainTopicId").val(result.Result.MainTopicId);
        $("#newChannel #Title").val(result.Result.Title);
        $("#newChannel .ql-editor.dx-htmleditor-content").html(result.Result.Description);
        $("#newChannel #DisplayOrder").val(result.Result.DisplayOrder);
        $("#newChannel #Graphics").val(result.Result.TopicIcon);
        $("#newChannel #ParentIdFK").val(result.Result.ParentIdFK);
    };

    var getShortDescription = function (record) {
        if (record == null || record.value == null) return "";
        let value = record.value;
        value = value.replace(/<\/?[^>]+(>|$)/g, "");
        if (value.length >= 15)
            return value.substring(0, 15) + "...";
        return value;
    }

</script>